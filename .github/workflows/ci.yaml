name: CI

on:
  pull_request:
    branches:
      - dev
      - main

jobs:
  # ──────────────────────────────────────────────────────────────────────────────
  # 1) PR → dev: full lint/build/test:coverage
  # ──────────────────────────────────────────────────────────────────────────────
  dev-ci:
    if: github.event.pull_request.base.ref == 'dev'
    name: Lint → Build → Test w/ Coverage (dev)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js & cache deps
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build
      - name: Run tests & collect coverage
        run: npm run test:coverage
        env:
          NODE_ENV: test
          DATABASE_URL: testdb-ci
          JWT_SECRET: test_jwt_secret_for_ci
          JWT_EXPIRES_IN: 1d
          BETTER_AUTH_SECRET: test_auth_secret_for_ci_8CgcbN3ovBTozm7wJ6Gimmmq0vSanm8t
          LOG_LEVEL: error

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

  # ──────────────────────────────────────────────────────────────────────────────
  # 2) PR → main: enforce source=dev + test:coverage
  # ──────────────────────────────────────────────────────────────────────────────
  main-ci:
    if: github.event.pull_request.base.ref == 'main'
    name: Ensure only-dev → Test w/ Coverage (main)
    runs-on: ubuntu-latest

    steps:
      - name: Fail if PR not from dev
        run: |
          if [ "${{ github.event.pull_request.head.ref }}" != "dev" ]; then
            echo "::error::PRs into main must come from the dev branch."
            exit 1
          fi

      - uses: actions/checkout@v3

      - name: Setup Node.js & cache deps
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
      - name: Run tests & collect coverage
        run: npm run test:coverage
        env:
          NODE_ENV: test
          DATABASE_URL: testdb-ci
          JWT_SECRET: test_jwt_secret_for_ci
          JWT_EXPIRES_IN: 1d
          BETTER_AUTH_SECRET: test_auth_secret_for_ci_8CgcbN3ovBTozm7wJ6Gimmmq0vSanm8t
          LOG_LEVEL: error

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage
